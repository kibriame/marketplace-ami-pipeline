packer {
  required_plugins {
    amazon = {
      source  = "github.com/hashicorp/amazon"
      version = "~> 1"
    }
    ansible = {
      source  = "github.com/hashicorp/ansible"
      version = "~> 1"
    }
  }
}

locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

source "amazon-ebs" "autogenerated_1" {
  ami_description = "AMI with Ansible provisioning and security hardening"
  ami_name        = "centos7-ami-${local.timestamp}"
  instance_type   = "t2.micro"
  region          = "ap-southeast-1"
  # source_ami      = "ami-0c02fb55956c7d316" #us-east-1
  source_ami      = "ami-0191308e0547d8180"  
  ssh_username    = "centos"
  associate_public_ip_address = true
  tags = {
    Name = "centos7-ansible"
  }
}

build {
  sources = ["source.amazon-ebs.autogenerated_1"]

  provisioner "shell" {
    script = "scripts/fix-centos-vault.sh"
    execute_command = "sudo -S bash '{{ .Path }}'"
  }

  provisioner "shell" {
    inline = [
      "echo '‚úÖ Preparing system...'",
      "sudo yum install -y yum-plugin-fastestmirror || true",
      "sudo yum clean all || true",
      "sudo yum install -y epel-release || true",
      "sudo yum update -y || true",
      "sudo yum install -y python3",
      "sudo [ ! -f /usr/bin/python ] && sudo ln -s /usr/bin/python3 /usr/bin/python || true",
      "echo '‚úÖ Python installed, ready for Ansible'"
    ]
  }

  provisioner "shell" {
    inline = [
      "echo 'üîç Running sanity check before Ansible...'",
      "whoami",
      "ls -lah",
      "echo '‚û°Ô∏è Starting Ansible provisioning...'"
    ]
  }

  provisioner "ansible" {
    playbook_file = "playbook.yml"
    extra_arguments = ["-vvv"]
    env = {
      ANSIBLE_DEBUG = "1"
      ANSIBLE_FORCE_COLOR = "true"
      ANSIBLE_HOST_KEY_CHECKING = "False"
    }
  }
}
