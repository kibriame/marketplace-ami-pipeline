packer {
  required_plugins {
    amazon = {
      source  = "github.com/hashicorp/amazon"
      version = "~> 1"
    }
    ansible = {
      source  = "github.com/hashicorp/ansible"
      version = "~> 1"
    }
  }
}

locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

source "amazon-ebs" "autogenerated_1" {
  ami_description = "AMI with Ansible provisioning and security hardening"
  ami_name        = "centos7-ami-${local.timestamp}"
  instance_type   = "t2.micro"
  region          = "ap-southeast-1"
  source_ami      = "ami-0191308e0547d8180"
  ssh_username    = "centos"
  ssh_pty         = true
  ssh_timeout     = "10m"
  associate_public_ip_address = true
  tags = {
    Name = "centos7-ansible"
  }
}

build {
  sources = ["source.amazon-ebs.autogenerated_1"]

  # Fix CentOS vault repo
  provisioner "shell" {
    script = "scripts/fix-centos-vault.sh"
    execute_command = "sudo -S bash '{{ .Path }}'"
  }

  # Install Python 3.8+ and symlinks
  provisioner "shell" {
    inline = [
      "echo 'üêç Installing Python 3.8.18 from source...'",
      "sudo yum groupinstall -y 'Development Tools'",
      "sudo yum install -y gcc openssl-devel bzip2-devel libffi-devel wget make",
      "cd /usr/src && sudo wget https://www.python.org/ftp/python/3.8.18/Python-3.8.18.tgz",
      "sudo tar xzf Python-3.8.18.tgz",
      "cd Python-3.8.18 && sudo ./configure --enable-optimizations && sudo make altinstall",
      "sudo ln -sf /usr/local/bin/python3.8 /usr/bin/python3",
      "sudo ln -sf /usr/local/bin/python3.8 /usr/bin/python",
      "echo '‚úÖ Python 3.8 ready for Ansible'"
    ]
  }

  # Install and configure openssh-sftp-server
  provisioner "shell" {
    inline = [
      "echo 'üîê Installing and configuring SFTP server...'",
      "sudo yum install -y openssh openssh-server openssh-clients",
      "sudo mkdir -p /var/run/sshd",
      "sudo sed -i '/^Subsystem sftp/d' /etc/ssh/sshd_config",
      "echo 'Subsystem sftp /usr/libexec/openssh/sftp-server' | sudo tee -a /etc/ssh/sshd_config",
      "sudo systemctl enable sshd",
      "sudo systemctl restart sshd || sudo service sshd restart",
      "echo '‚úÖ SFTP setup complete'"
    ]
  }

  # Optional: Debug info before Ansible
  provisioner "shell" {
    inline = [
      "echo 'üß™ Debugging before Ansible...'",
      "whoami",
      "ls -lah /home/centos",
      "cat /etc/redhat-release",
      "python3 --version",
      "which python3"
    ]
  }

  # Run Ansible
  provisioner "ansible" {
    playbook_file    = "playbook.yml"
    extra_arguments  = ["-vvv"]
  }
}
